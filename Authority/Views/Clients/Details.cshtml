@using Authority.Data
@using IdentityServer4.EntityFramework.Entities
@using Authority.Controllers.UI.Dashboard

@model ClientViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Podrobnosti</h1>
@if (TempData.ContainsKey("SuccessMessage"))
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<div>
    <div class="row">
        <div class="col-md-6">
            <h2>Klient</h2>
            <hr />
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AbsoluteRefreshTokenLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AbsoluteRefreshTokenLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AccessTokenLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AccessTokenLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AccessTokenType)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AccessTokenType)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AllowAccessTokensViaBrowser)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AllowAccessTokensViaBrowser)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AllowOfflineAccess)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AllowOfflineAccess)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AllowPlainTextPkce)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AllowPlainTextPkce)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AllowRememberConsent)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AllowRememberConsent)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AlwaysIncludeUserClaimsInIdToken)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AlwaysIncludeUserClaimsInIdToken)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.AuthorizationCodeLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.AuthorizationCodeLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.BackChannelLogoutSessionRequired)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.BackChannelLogoutSessionRequired)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.BackChannelLogoutUri)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.BackChannelLogoutUri)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ClientClaimsPrefix)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ClientClaimsPrefix)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ClientId)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ClientId)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ClientName)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ClientName)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ClientUri)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ClientUri)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ConsentLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ConsentLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.Description)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.Description)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.EnableLocalLogin)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.EnableLocalLogin)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.Enabled)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.Enabled)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.FrontChannelLogoutSessionRequired)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.FrontChannelLogoutSessionRequired)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.FrontChannelLogoutUri)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.FrontChannelLogoutUri)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.IdentityTokenLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.IdentityTokenLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.IncludeJwtId)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.IncludeJwtId)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.LogoUri)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.LogoUri)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.PairWiseSubjectSalt)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.PairWiseSubjectSalt)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.ProtocolType)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.ProtocolType)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.RefreshTokenExpiration)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.RefreshTokenExpiration)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.RefreshTokenUsage)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.RefreshTokenUsage)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.RequireClientSecret)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.RequireClientSecret)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.RequireConsent)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.RequireConsent)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.RequirePkce)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.RequirePkce)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.SlidingRefreshTokenLifetime)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.SlidingRefreshTokenLifetime)
                </dd>
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(model => model.Client.UpdateAccessTokenClaimsOnRefresh)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Client.UpdateAccessTokenClaimsOnRefresh)
                </dd>
            </dl>
            <div>
                <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@Model.Client.Id">Editovat</a> <a class="btn btn-secondary" asp-action="Index">Zpět</a>
            </div>
        </div>
        <div class="col-md-6">
            <h2>Secrets</h2>
            <hr />
            <div><a class="btn btn-success m-1" asp-action="CreateSecret" asp-route-id="@Model.Client.Id">Nový</a></div>
            @if (Model.ClientSecrets.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Typ</th>
                            <th>Hodnota (SHA256)</th>
                            <th>Expirace</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.Client.ClientSecrets)
                        {
                            <tr>
                                <td>@s.Type</td>
                                <td>@s.Value</td>
                                <td>@s.Expiration</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveSecret" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá žádný secret.</p>
            }
            <h3>Povolené scope</h3>
            <div>
                <a class="btn btn-success m-1" asp-action="CreateScope" asp-route-id="@Model.Client.Id">Nový</a>
                <a class="btn btn-default" asp-action="CreateScope" asp-route-id="@Model.Client.Id" asp-route-scope="openid">OpenId</a>
                <a class="btn btn-default" asp-action="CreateScope" asp-route-id="@Model.Client.Id" asp-route-scope="profile">Profile</a>
            </div>
            @if (Model.AllowedScopes.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Scope</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.AllowedScopes)
                        {
                            <tr>
                                <td>@s.Scope</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveScope" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá povolený žádný scope.</p>
            }
            <h3>Povolené typy grantů</h3>
            <div>
                <a class="btn btn-success" asp-action="CreateGrant" asp-route-id="@Model.Client.Id">Nový</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="client_credentials">Client Credentials</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="password">Password</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="implicit">Implicit</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="refresh_token">Refresh</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="authorization_code">Code</a>
                <a class="btn btn-default" asp-action="CreateGrant" asp-route-id="@Model.Client.Id" asp-route-grant="urn:ietf:params:oauth:grant-type:device_code">Device Code</a>
            </div>
            @if (Model.AllowedGrantTypes.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Grant</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.AllowedGrantTypes)
                        {
                            <tr>
                                <td>@s.GrantType</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveGrant" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá povolené žádné typy grantů.</p>
            }
            <h3>Redirect URI</h3>
            <div>
                <a class="btn btn-success m-1" asp-action="CreateRedirectUri" asp-route-id="@Model.Client.Id">Nový</a>
            </div>
            @if (Model.Client.RedirectUris.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Uri</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.RedirectUris)
                        {
                            <tr>
                                <td>@s.RedirectUri</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveRedirectUri" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá uvedeny žádné Uri.</p>
            }
            <h3>Redirect URI po odhlášení</h3>
            <div>
                <a class="btn btn-success m-1" asp-action="CreateLogoutUri" asp-route-id="@Model.Client.Id">Nový</a>
            </div>
            @if (Model.Client.PostLogoutRedirectUris.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Uri</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.PostLogoutRedirectUris)
                        {
                            <tr>
                                <td>@s.PostLogoutRedirectUri</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveLogoutUri" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá uvedeny žádná Uri.</p>
            }
            <h3>Povolená CORS (Origin)</h3>
            <div>
                <a class="btn btn-success" asp-action="CreateCors" asp-route-id="@Model.Client.Id">Nový</a>
            </div>
            @if (Model.AllowedCorsOrigins.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Origin</th>
                            <th>Akce</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model.AllowedCorsOrigins)
                        {
                            <tr>
                                <td>@s.Origin</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="RemoveCors" asp-route-id="@s.Id" asp-route-client="@Model.Client.Id">Odstranit</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Klient nemá uvedeny žádné Originy.</p>
            }
        </div>
    </div>
</div>